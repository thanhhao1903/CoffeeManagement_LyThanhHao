/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.awt.CardLayout;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import lib.XFile;
import model.Bill;
import model.Item;

/**
 *
 * @author ADMIN
 */
public class Home extends javax.swing.JFrame {

    DefaultTableModel tbModelMenu; //tao bang
    DefaultTableModel tbModelBill;
    DefaultComboBoxModel cbModel = new DefaultComboBoxModel();
    DefaultComboBoxModel cbModelItem = new DefaultComboBoxModel();
    String filePathMenu = "";
    String filePathBill = "";
    ArrayList<Item> itemList;
    ArrayList<Bill> billList;
    int currentRow = -1;
    int currentRowBill = -1;
    CardLayout cardLayout;
    Color DefaultColor, ClickedColor;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        initMenuTable();
        loadCb();
        loadCbFilter();
        this.setLocationRelativeTo(null);
        tbItem.setDefaultEditor(Object.class, null);
        tbMenu.setDefaultEditor(Object.class, null);
        tbBill.setDefaultEditor(Object.class, null);
        filePathMenu = "./src/lib/items.dat";
        filePathBill = "./src/lib/bills.dat";
        itemList = new ArrayList<>();
        billList = new ArrayList<>();
        boolean fileMenu = loadFileMenu();
        boolean fileBill = loadFileBill();
        if (fileMenu) {
            fillToMenu();
        }
        if (fileBill) {
            fillToBill();
        }

        cardLayout = (CardLayout) tabPanel.getLayout();
        DefaultColor = new Color(255, 102, 153);
        ClickedColor = new Color(255, 204, 0);
        btnAddBill.setEnabled(true);
    }

    private void fillToMenu() {
        tbModelMenu.setRowCount(0);
        for (Item c : itemList) {
            Object[] row = new Object[]{c.getId(), c.getName(), c.getPrice(), c.getCategory()};
            tbModelMenu.addRow(row);
        }
    }

    private boolean loadFileMenu() {
        if (XFile.readObject(filePathMenu) == null) {
            return false; //kiem tra co file chua
        }
        itemList = (ArrayList<Item>) XFile.readObject(filePathMenu);
        return true; //doc file do
    }

    private boolean loadFileBill() {
        if (XFile.readObject(filePathBill) == null) {
            return false;
        }
        billList = (ArrayList<Bill>) XFile.readObject(filePathBill);
        return true;
    }

    private void saveFile() {
        XFile.writeObject(filePathMenu, itemList);
        XFile.writeObject(filePathBill, billList);
    }

    private void loadCb() {
        String[] categoryLst = {"Coffee", "Tea", "Milk Tea"};
        for (String string : categoryLst) {
            cbModel.addElement(string);
        }
        cbCategory.setModel(cbModel);
    }

    private void loadCbFilter() {
        String[] cateList = {"None", "Coffee", "Tea", "Milk Tea"};
        for (String string : cateList) {
            cbModelItem.addElement(string);
        }
        cbItem.setModel(cbModelItem);
    }

    private void initMenuTable() {
        String[] columnMenu = {"Code", "Name", "Price", "Category"};
        tbModelMenu = new DefaultTableModel(columnMenu, 0);
        tbItem.setModel(tbModelMenu);
        tbMenu.setModel(tbModelMenu);

        String[] columnBill = {"No", "Name", "Price", "Order Date", "Size"};
        tbModelBill = new DefaultTableModel(columnBill, 0);
        tbBill.setModel(tbModelBill);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grSize = new javax.swing.ButtonGroup();
        jSplitPane1 = new javax.swing.JSplitPane();
        Home = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        menuName = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        opItems = new javax.swing.JPanel();
        lbItems = new javax.swing.JLabel();
        opSelling = new javax.swing.JPanel();
        lbSelling = new javax.swing.JLabel();
        opLogout = new javax.swing.JPanel();
        logout = new javax.swing.JLabel();
        opExit = new javax.swing.JPanel();
        exit = new javax.swing.JLabel();
        tabPanel = new javax.swing.JPanel();
        tabItem = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox<>();
        txtCodeItem = new javax.swing.JTextField();
        txtNameItem = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbItem = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        clear = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cbItem = new javax.swing.JComboBox<>();
        tabSelling = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtPriceBill = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnAddBill = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbMenu = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        sizeM = new javax.swing.JRadioButton();
        sizeL = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbBill = new javax.swing.JTable();
        txtNameBill = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnUpdateBill = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        orderDate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Home.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(51, 153, 255));

        menuName.setFont(new java.awt.Font("Gill Sans Ultra Bold", 1, 30)); // NOI18N
        menuName.setForeground(new java.awt.Color(255, 255, 255));
        menuName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuName.setText("Items");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(menuName)
                .addContainerGap(272, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(menuName)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        Home.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 640, 90));

        jPanel4.setBackground(new java.awt.Color(255, 102, 153));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/logoHome.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 102, 153));
        jPanel2.setMinimumSize(new java.awt.Dimension(62, 35));
        jPanel2.setPreferredSize(new java.awt.Dimension(80, 220));

        opItems.setBackground(new java.awt.Color(255, 102, 153));
        opItems.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        opItems.setLayout(new java.awt.BorderLayout());

        lbItems.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        lbItems.setForeground(new java.awt.Color(255, 255, 255));
        lbItems.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbItems.setText("ITEMS");
        lbItems.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbItemsMousePressed(evt);
            }
        });
        opItems.add(lbItems, java.awt.BorderLayout.CENTER);

        opSelling.setBackground(new java.awt.Color(255, 102, 153));
        opSelling.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        opSelling.setLayout(new java.awt.BorderLayout());

        lbSelling.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        lbSelling.setForeground(new java.awt.Color(255, 255, 255));
        lbSelling.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSelling.setText("SELLING");
        lbSelling.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbSelling.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbSellingMousePressed(evt);
            }
        });
        opSelling.add(lbSelling, java.awt.BorderLayout.CENTER);

        opLogout.setBackground(new java.awt.Color(255, 102, 153));
        opLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        opLogout.setLayout(new java.awt.BorderLayout());

        logout.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logout.setText("LOGOUT");
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                logoutMousePressed(evt);
            }
        });
        opLogout.add(logout, java.awt.BorderLayout.CENTER);

        opExit.setBackground(new java.awt.Color(255, 102, 153));
        opExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        opExit.setLayout(new java.awt.BorderLayout());

        exit.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit.setText("Exit");
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exitMousePressed(evt);
            }
        });
        opExit.add(exit, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(opItems, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(opSelling, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(opLogout, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(opExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(125, 125, 125))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(opItems, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(opSelling, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(opExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        opItems.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)))
                .addGap(20, 20, 20))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(66, 66, 66)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Home.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 540));

        tabPanel.setLayout(new java.awt.CardLayout());

        tabItem.setBackground(new java.awt.Color(0, 255, 204));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Code Item");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Name Item");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Price");

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Category");

        txtCodeItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCodeItemFocusGained(evt);
            }
        });

        txtNameItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNameItemFocusGained(evt);
            }
        });

        txtPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPriceFocusGained(evt);
            }
        });

        tbItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code Item", "Name Item", "Price", "Category"
            }
        ));
        tbItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbItemMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbItem);

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 10));

        clear.setBackground(new java.awt.Color(255, 51, 51));
        clear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("Clear");
        clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel1.add(clear);

        btnAdd.setBackground(new java.awt.Color(255, 51, 51));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd);

        btnUpdate.setBackground(new java.awt.Color(255, 51, 51));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.setToolTipText("");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate);

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setToolTipText("");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete);

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Items List");

        cbItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabItemLayout = new javax.swing.GroupLayout(tabItem);
        tabItem.setLayout(tabItemLayout);
        tabItemLayout.setHorizontalGroup(
            tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabItemLayout.createSequentialGroup()
                .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tabItemLayout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(cbItem, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabItemLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabItemLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodeItem, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabItemLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(39, 39, 39)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58)
                        .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(tabItemLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(14, 14, 14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNameItem)
                            .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(596, 596, 596))
            .addGroup(tabItemLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabItemLayout.setVerticalGroup(
            tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabItemLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtCodeItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtNameItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabPanel.add(tabItem, "items");

        tabSelling.setBackground(new java.awt.Color(0, 255, 204));

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Name");

        jLabel12.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Price");

        jLabel13.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Size");

        btnAddBill.setBackground(new java.awt.Color(255, 51, 51));
        btnAddBill.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddBill.setForeground(new java.awt.Color(255, 255, 255));
        btnAddBill.setText("Add to bill");
        btnAddBill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddBill.setPreferredSize(new java.awt.Dimension(90, 30));
        btnAddBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBillActionPerformed(evt);
            }
        });

        tbMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code Item", "Name Item", "Price", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbMenuMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbMenu);

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("List of bills");

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Menu");

        grSize.add(sizeM);
        sizeM.setText("Size M");
        sizeM.setActionCommand("M");

        grSize.add(sizeL);
        sizeL.setText("Size L");
        sizeL.setActionCommand("L");

        tbBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbBillMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(tbBill);

        txtNameBill.setDisabledTextColor(new java.awt.Color(153, 153, 153));

        jLabel16.setFont(new java.awt.Font("Calibri", 1, 15)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Order Date");

        btnUpdateBill.setBackground(new java.awt.Color(255, 51, 51));
        btnUpdateBill.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdateBill.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateBill.setText("Update");
        btnUpdateBill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateBill.setPreferredSize(new java.awt.Dimension(76, 30));
        btnUpdateBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnUpdateBillMousePressed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(255, 51, 51));
        btnRefresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRefresh.setPreferredSize(new java.awt.Dimension(77, 30));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabSellingLayout = new javax.swing.GroupLayout(tabSelling);
        tabSelling.setLayout(tabSellingLayout);
        tabSellingLayout.setHorizontalGroup(
            tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabSellingLayout.createSequentialGroup()
                .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabSellingLayout.createSequentialGroup()
                        .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabSellingLayout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jLabel15))
                            .addGroup(tabSellingLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(tabSellingLayout.createSequentialGroup()
                                        .addComponent(btnAddBill, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdateBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5))
                                    .addGroup(tabSellingLayout.createSequentialGroup()
                                        .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel11)
                                            .addComponent(txtNameBill, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                            .addComponent(jLabel16)
                                            .addComponent(orderDate))
                                        .addGap(34, 34, 34)
                                        .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel12)
                                                .addComponent(txtPriceBill, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(tabSellingLayout.createSequentialGroup()
                                                .addComponent(sizeM)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(sizeL)))))))
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabSellingLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabSellingLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabSellingLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addGap(123, 123, 123))))
        );
        tabSellingLayout.setVerticalGroup(
            tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabSellingLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabSellingLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNameBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sizeM)
                            .addComponent(sizeL)
                            .addComponent(orderDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tabSellingLayout.createSequentialGroup()
                        .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabSellingLayout.createSequentialGroup()
                                .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabSellingLayout.createSequentialGroup()
                                        .addComponent(txtPriceBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(89, 89, 89)
                                        .addComponent(btnAddBill, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tabSellingLayout.createSequentialGroup()
                                        .addGap(114, 114, 114)
                                        .addGroup(tabSellingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnUpdateBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)))))
        );

        tabPanel.add(tabSelling, "selling");

        Home.add(tabPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 640, 440));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMousePressed
        // TODO add your handling code here:
        Login logframe = new Login();
        logframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutMousePressed

    private void lbItemsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbItemsMousePressed
        // TODO add your handling code here:
        opItems.setBackground(ClickedColor);
        opSelling.setBackground(DefaultColor);
        opLogout.setBackground(DefaultColor);
        menuName.setText("Items");
        cardLayout.show(tabPanel, "items");
    }//GEN-LAST:event_lbItemsMousePressed

    private void lbSellingMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbSellingMousePressed
        // TODO add your handling code here:
        opItems.setBackground(DefaultColor);
        opSelling.setBackground(ClickedColor);
        opLogout.setBackground(DefaultColor);
        menuName.setText("Selling");
        cardLayout.show(tabPanel, "selling");
    }//GEN-LAST:event_lbSellingMousePressed

    private void exitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMousePressed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this,
                "Do you wanna exit?", "Exit?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMousePressed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        txtCodeItem.setText("");
        txtNameItem.setText("");
        txtPrice.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (currentRow > -1) {
            deleteItem();
            fillToMenu();
            saveFile();
            resetForm();
            currentRow = -1;
        } else {
            JOptionPane.showMessageDialog(this, "Please select the row you want to delete!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (currentRow > -1) {
            if (CheckUpdate()) {
                updateItem();
                fillToMenu();
                saveFile();
                resetForm();
                currentRow = -1;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select the row you want to update!");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (CheckAdd()) {
            addItem();
            fillToMenu();
            saveFile();
            resetForm();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tbItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbItemMousePressed
        // TODO add your handling code here:
        currentRow = tbItem.getSelectedRow();
        showDetailItem(currentRow);
    }//GEN-LAST:event_tbItemMousePressed

    private void tbMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMenuMousePressed
        // TODO add your handling code here:
        currentRow = tbMenu.getSelectedRow();
        showDetailMenu(currentRow);
    }//GEN-LAST:event_tbMenuMousePressed

    
    private void txtCodeItemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodeItemFocusGained
        // TODO add your handling code here:
        txtCodeItem.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtCodeItemFocusGained

    private void txtNameItemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameItemFocusGained
        // TODO add your handling code here:
        txtNameItem.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtNameItemFocusGained

    private void txtPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPriceFocusGained
        // TODO add your handling code here:
        txtPrice.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtPriceFocusGained

    private void tbBillMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBillMousePressed
        // TODO add your handling code here:
        currentRowBill = tbBill.getSelectedRow();
        showDetailBill(currentRowBill);
        btnAddBill.setEnabled(false);
    }//GEN-LAST:event_tbBillMousePressed

    private void cbItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbItemActionPerformed
        // TODO add your handling code here:
        String kw = cbItem.getSelectedItem().toString();
        Filter(kw);
    }//GEN-LAST:event_cbItemActionPerformed

    private void btnUpdateBillMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateBillMousePressed
        // TODO add your handling code here:
        if (currentRowBill > -1) {
            updateBill();
            fillToBill();
            saveFile();
            currentRowBill = -1;
            btnAddBill.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "Please select the row you want to update!");
        }
    }//GEN-LAST:event_btnUpdateBillMousePressed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        resetForm();
        btnAddBill.setEnabled(true);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnAddBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBillActionPerformed
        // TODO add your handling code here:
        addBill();
        fillToBill();
        saveFile();
    }//GEN-LAST:event_btnAddBillActionPerformed

    private void addItem() {
        if (txtCodeItem.getText().isEmpty() && txtNameItem.getText().isEmpty() && txtPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter full information!");
            txtCodeItem.setBackground(Color.RED);
            txtNameItem.setBackground(Color.RED);
            txtPrice.setBackground(Color.RED);
        } else if (txtCodeItem.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Code item!");
            txtCodeItem.setBackground(Color.RED);
        } else if (txtNameItem.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Name item!");
            txtNameItem.setBackground(Color.RED);
        } else if (txtPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Price item!");
            txtPrice.setBackground(Color.RED);
        } else {
            String id = txtCodeItem.getText().trim();
            String name = txtNameItem.getText().trim();
            Integer price = Integer.parseInt(txtPrice.getText());
            String category = cbCategory.getSelectedItem().toString();
            Item i = new Item(id, name, price, category);
            itemList.add(i);
        }
    }

    private void updateItem() {
        if (txtCodeItem.getText().isEmpty() || txtNameItem.getText().isEmpty() || txtPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter full information!");
        } else {
            Item i = itemList.get(currentRow);
            i.setId(txtCodeItem.getText());
            i.setName(txtNameItem.getText());
            i.setPrice(Integer.valueOf(txtPrice.getText()));
            i.setCategory(cbCategory.getSelectedItem().toString());
        }
    }

    private void deleteItem() {
        int result = JOptionPane.showConfirmDialog(this, "Do you want to delete this row?",
                "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            itemList.remove(currentRow);
            resetForm();
        }
    }

    private void addBill() {
        if (txtNameBill.getText().isEmpty() && txtPriceBill.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please choose an item from the Menu!");
        } else if (grSize.getSelection() == null) {
            JOptionPane.showMessageDialog(this, "Please choose size!");
        } else {
            String name = txtNameBill.getText();
            Integer price = Integer.parseInt(txtPriceBill.getText());
            String date = orderDate.getText();
            String size = grSize.getSelection().getActionCommand();
            if (size.equals("L")) {
                price = price + 10;
            }
            Bill b = new Bill(billList.size() + 1, name, price, date, size);
            billList.add(b);
            resetForm();
        }
    }

    private void updateBill() {
        if (txtNameBill.getText().isEmpty() || txtPriceBill.getText().isEmpty() || orderDate.getText()== null || cbCategory.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Please enter full information!");
        } else {
            Bill b = billList.get(currentRow);
            String size = grSize.getSelection().getActionCommand();
            Integer price = Integer.parseInt(txtPriceBill.getText());
            b.setOrderDate(orderDate.getText());
            if (size.equals("L")) {
                price = price + 10;
            } else {
                price = price - 10;
            }
            b.setSize(grSize.getSelection().getActionCommand());
            b.setPrice(price);
            resetForm();
        }
    }
    private void fillToBill() {
        tbModelBill.setRowCount(0);
        for (Bill b : billList) {
            Object[] row = new Object[]{b.getId(), b.getName(), b.getPrice(), b.getOrderDate(), b.isSize()};
            tbModelBill.addRow(row);
        }
    }

    private void showDetailItem(int r) {
        String id = (String) tbItem.getValueAt(r, 0);
        txtCodeItem.setText(id);
        String name = (String) tbItem.getValueAt(r, 1);
        txtNameItem.setText(name);
        Integer price = (Integer) tbItem.getValueAt(r, 2);
        txtPrice.setText(price.toString());
        String category = (String) tbItem.getValueAt(r, 3);
        cbCategory.setSelectedItem(category);
        Item i = itemList.get(currentRow);
    }

    private void showDetailMenu(int r) {
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String formatDate = sdf.format(date);
        orderDate.setText(formatDate);        
        orderDate.setEditable(false);
        String name = (String) tbMenu.getValueAt(r, 1);
        txtNameBill.setText(name);
        txtNameBill.setEditable(false);
        Integer price = (Integer) tbMenu.getValueAt(r, 2);
        txtPriceBill.setText(price.toString());
        txtPriceBill.setEditable(false);
        Item i = itemList.get(currentRow);
    }

    private void showDetailBill(int r) {
        String name = (String) tbBill.getValueAt(r, 1);
        txtNameBill.setText(name);
        txtNameBill.setEditable(false);
        Integer price = (Integer) tbBill.getValueAt(r, 2);
        txtPriceBill.setText(price.toString());
        txtPriceBill.setEditable(false);
        String date = (String) tbBill.getValueAt(r, 3);
        orderDate.setText(date);
        String size = (String) tbBill.getValueAt(r, 4).toString();
        if (size.equals("M")) {
            sizeM.setSelected(true);
        } else {
            sizeL.setSelected(true);
        }
        Bill b = billList.get(currentRowBill);
    }

    private boolean CheckAdd() {
        for (Item i : itemList) {
//            Item item = new Item(i.getId(), i.getName(), i.getPrice());
            if (txtCodeItem.getText().equals(i.getId())) {
                txtCodeItem.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Code item already exists");
                return false;
            }
        }
        for (int i = 0; i < txtPrice.getText().length(); i++) {
            Boolean flags = Character.isDigit(txtPrice.getText().charAt(i));
            if (!flags) {
                txtPrice.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Price must be number");
                return false;
            }
        }
        return true;
    }

    private boolean CheckUpdate() {
        for (int i = 0; i < txtPrice.getText().length(); i++) {
            Boolean flags = Character.isDigit(txtPrice.getText().charAt(i));
            if (!flags) {
                txtPrice.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Price must be number");
                return false;
            }
        }
        return true;
    }

    private void Filter(String kw) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(tbModelMenu);
        tbItem.setRowSorter(tr);

        if (!"None".equals(kw)) {
            tr.setRowFilter(RowFilter.regexFilter(kw, 3));
        } else {
            tbMenu.setRowSorter(tr);
        }
    }

    private void resetForm() {
        currentRowBill = -1;
        txtCodeItem.setText("");
        txtNameItem.setText("");
        txtPrice.setText("");

        txtNameBill.setText("");
        txtPriceBill.setText("");
        orderDate.setText(" ");
        grSize.clearSelection();
        
        txtCodeItem.setText("");
        txtNameItem.setText("");
        txtPrice.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Home;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddBill;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateBill;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JComboBox<String> cbItem;
    private javax.swing.JButton clear;
    private javax.swing.JLabel exit;
    private javax.swing.ButtonGroup grSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lbItems;
    private javax.swing.JLabel lbSelling;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel menuName;
    private javax.swing.JPanel opExit;
    private javax.swing.JPanel opItems;
    private javax.swing.JPanel opLogout;
    private javax.swing.JPanel opSelling;
    private javax.swing.JTextField orderDate;
    private javax.swing.JRadioButton sizeL;
    private javax.swing.JRadioButton sizeM;
    private javax.swing.JPanel tabItem;
    private javax.swing.JPanel tabPanel;
    private javax.swing.JPanel tabSelling;
    private javax.swing.JTable tbBill;
    private javax.swing.JTable tbItem;
    private javax.swing.JTable tbMenu;
    private javax.swing.JTextField txtCodeItem;
    private javax.swing.JTextField txtNameBill;
    private javax.swing.JTextField txtNameItem;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPriceBill;
    // End of variables declaration//GEN-END:variables
}
